@using System.Web.Configuration;
@using GestiLog.Entities;
@model GestiLog.Models.NoticeViewModel

@{
    ViewBag.Title = "Comunicado";
    string[] Labels = new string[2];
    switch (Model.Modulo.ToString().ToUpper())
    {
        // Importación Marítima
        case "1E4CAD29-F6C1-4C9B-99C8-06B65E8464D8":
            Labels[0] = "MBL";
            Labels[1] = "HBL";
            break;
        // Importación Aérea
        case "32916188-AD05-4BCB-A89B-467260729CB5":
            Labels[0] = "MAWB";
            Labels[1] = "HAWB";
            break;
        default:
            Labels[0] = "";
            Labels[1] = "";
            break;
    }
}

<div class="row">
    <!-- column -->
    <div class="col-md-12">
        <!-- general form elements -->
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Modificar @ViewBag.Title</h3>
            </div>
            <!-- /.box-header -->
            <!-- form start -->
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="box-body">
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.S_Creacion)
                    @Html.HiddenFor(model => model.S_Usuario)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Nombre)

                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Codigo, "Código")

                        @Html.EditorFor(model => model.Codigo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Codigo, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Contenido)

                        @Html.TextAreaFor(model => model.Contenido, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Contenido, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">
                        @Html.Label("Adjuntos " + Labels[0])
                        @Html.ListBox("AdjuntosMBL", null, new { @class = "form-control ilistbox" })
                    </div>

                    <div class="form-group">
                        @Html.Label("Adjuntos " + Labels[1])
                        @Html.ListBox("AdjuntosHBL", null, new { @class = "form-control ilistbox" })
                    </div>

                    <div class="checkbox">
                        <label>
                            @Html.EditorFor(model => model.Habilitado)
                            Habilitado
                        </label>
                        @Html.ValidationMessageFor(model => model.Habilitado, "", new { @class = "text-danger" })
                    </div>
                </div>
                <!-- /.box-body -->
                <div class="box-footer text-right">
                    @Html.ActionLink("Cancelar", "Index", new { module = Model.Modulo }, new { @class = "btn btn-danger btn-sm" })
                    <input type="submit" value="Guardar" class="btn btn-success btn-sm" />
                </div>
            }
        </div>
        <!-- /.box -->
    </div>
    <!--/.col -->
</div>
<!-- /.row -->

@section Scripts
{
    <script src="~/Plugins/ckeditor/ckeditor.js"></script>
    <script>
        $(".ilistbox").select2();
        // Esta línea es obligatoria cuando se instancia un CKEditor
        var icontext = '@WebConfigurationManager.AppSettings["SoftUrl"].ToString()';
        var imodule = '@Model.Modulo';
        $(function () {
            // Inicializando CKEditor
            CKEDITOR.replace('Contenido');
        });
    </script>
}