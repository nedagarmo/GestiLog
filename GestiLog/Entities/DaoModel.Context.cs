//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GestiLog.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DaoEntities : DbContext
    {
        public DaoEntities()
            : base("name=DaoEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Aeropuerto> Aeropuerto { get; set; }
        public virtual DbSet<Agente> Agente { get; set; }
        public virtual DbSet<Anexo> Anexo { get; set; }
        public virtual DbSet<Ciudad> Ciudad { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Contacto> Contacto { get; set; }
        public virtual DbSet<ContactoModulo> ContactoModulo { get; set; }
        public virtual DbSet<Contenedor> Contenedor { get; set; }
        public virtual DbSet<Embalaje> Embalaje { get; set; }
        public virtual DbSet<Incoterm> Incoterm { get; set; }
        public virtual DbSet<Mbl> Mbl { get; set; }
        public virtual DbSet<Modulo> Modulo { get; set; }
        public virtual DbSet<Naviera> Naviera { get; set; }
        public virtual DbSet<Notify> Notify { get; set; }
        public virtual DbSet<Pais> Pais { get; set; }
        public virtual DbSet<Puerto> Puerto { get; set; }
        public virtual DbSet<Sector> Sector { get; set; }
        public virtual DbSet<TipoOficina> TipoOficina { get; set; }
        public virtual DbSet<Adjunto> Adjunto { get; set; }
        public virtual DbSet<Comunicado> Comunicado { get; set; }
        public virtual DbSet<ComunicadoAdjunto> ComunicadoAdjunto { get; set; }
        public virtual DbSet<EmisionBl> EmisionBl { get; set; }
        public virtual DbSet<Flete> Flete { get; set; }
        public virtual DbSet<Hbl> Hbl { get; set; }
        public virtual DbSet<HblTipo> HblTipo { get; set; }
        public virtual DbSet<Historico> Historico { get; set; }
        public virtual DbSet<HistoricoAdjunto> HistoricoAdjunto { get; set; }
        public virtual DbSet<Motonave> Motonave { get; set; }
        public virtual DbSet<Muelle> Muelle { get; set; }
        public virtual DbSet<Operativo> Operativo { get; set; }
        public virtual DbSet<Proveedor> Proveedor { get; set; }
        public virtual DbSet<RangoDiaLibre> RangoDiaLibre { get; set; }
        public virtual DbSet<Sucursal> Sucursal { get; set; }
        public virtual DbSet<TipoContenedor> TipoContenedor { get; set; }
        public virtual DbSet<TipoEmbarque> TipoEmbarque { get; set; }
        public virtual DbSet<Moneda> Moneda { get; set; }
        public virtual DbSet<ComunicadoCampo> ComunicadoCampo { get; set; }
        public virtual DbSet<ContactoEnvio> ContactoEnvio { get; set; }
        public virtual DbSet<Aerolinea> Aerolinea { get; set; }
        public virtual DbSet<Disposicion> Disposicion { get; set; }
        public virtual DbSet<EmisionAwb> EmisionAwb { get; set; }
        public virtual DbSet<Hawb> Hawb { get; set; }
        public virtual DbSet<HawbTipo> HawbTipo { get; set; }
        public virtual DbSet<Mawb> Mawb { get; set; }
        public virtual DbSet<Area> Area { get; set; }
        public virtual DbSet<Frecuencia> Frecuencia { get; set; }
        public virtual DbSet<TarifarioAereo> TarifarioAereo { get; set; }
        public virtual DbSet<TarifarioFcl> TarifarioFcl { get; set; }
        public virtual DbSet<TarifarioLcl> TarifarioLcl { get; set; }
        public virtual DbSet<TarifarioViaAerea> TarifarioViaAerea { get; set; }
        public virtual DbSet<TipoAgente> TipoAgente { get; set; }
        public virtual DbSet<TarifarioAereoItem> TarifarioAereoItem { get; set; }
        public virtual DbSet<TarifarioEscala> TarifarioEscala { get; set; }
        public virtual DbSet<TarifarioEscalaItem> TarifarioEscalaItem { get; set; }
    
        public virtual ObjectResult<string> ObtenerValor(string id, string campo, string entidad, Nullable<bool> lista, string fuente)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var campoParameter = campo != null ?
                new ObjectParameter("Campo", campo) :
                new ObjectParameter("Campo", typeof(string));
    
            var entidadParameter = entidad != null ?
                new ObjectParameter("Entidad", entidad) :
                new ObjectParameter("Entidad", typeof(string));
    
            var listaParameter = lista.HasValue ?
                new ObjectParameter("Lista", lista) :
                new ObjectParameter("Lista", typeof(bool));
    
            var fuenteParameter = fuente != null ?
                new ObjectParameter("Fuente", fuente) :
                new ObjectParameter("Fuente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ObtenerValor", idParameter, campoParameter, entidadParameter, listaParameter, fuenteParameter);
        }
    }
}
